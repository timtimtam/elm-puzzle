module Evergreen.Migrate.V31 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Array
import Browser.Dom
import Constants
import Direction3d
import Duration
import Evergreen.V29.Geometry.Types
import Evergreen.V29.Point2d
import Evergreen.V29.Scene3d.Material
import Evergreen.V29.Scene3d.Types
import Evergreen.V29.Types
import Evergreen.V29.Vector2d
import Evergreen.V31.Direction3d
import Evergreen.V31.Geometry.Types
import Evergreen.V31.Internal.World
import Evergreen.V31.Point2d
import Evergreen.V31.Scene3d.Material
import Evergreen.V31.Scene3d.Types
import Evergreen.V31.Types
import Evergreen.V31.Vector2d
import Lamdera.Migrations exposing (..)
import Physics.Body
import Physics.Material
import Physics.World
import Pixels
import Quantity
import Scene3d
import Task


handleResult v =
    case v of
        Err _ ->
            Evergreen.V31.Types.NoOpFrontendMsg

        Ok vp ->
            Evergreen.V31.Types.WindowResized
                (vp.scene.width |> Basics.round |> Pixels.int)
                (vp.scene.height |> Basics.round |> Pixels.int)


frontendModel : Evergreen.V29.Types.FrontendModel -> ModelMigration Evergreen.V31.Types.FrontendModel Evergreen.V31.Types.FrontendMsg
frontendModel old =
    ModelMigrated
        ( Evergreen.V31.Types.Lobby
            { name = ""
            , width = Quantity.zero
            , height = Quantity.zero
            , playerColorTexture = Nothing
            , playerRoughnessTexture = Nothing
            }
        , Cmd.none
        )


backendModel : Evergreen.V29.Types.BackendModel -> ModelMigration Evergreen.V31.Types.BackendModel Evergreen.V31.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V29.Types.FrontendMsg -> MsgMigration Evergreen.V31.Types.FrontendMsg Evergreen.V31.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V29.Types.ToBackend -> MsgMigration Evergreen.V31.Types.ToBackend Evergreen.V31.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V29.Types.BackendMsg -> MsgMigration Evergreen.V31.Types.BackendMsg Evergreen.V31.Types.BackendMsg
backendMsg old =
    MsgMigrated ( migrate_Types_BackendMsg old, Cmd.none )


toFrontend : Evergreen.V29.Types.ToFrontend -> MsgMigration Evergreen.V31.Types.ToFrontend Evergreen.V31.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_BackendModel : Evergreen.V29.Types.BackendModel -> Evergreen.V31.Types.BackendModel
migrate_Types_BackendModel old =
    { world =
        Evergreen.V31.Internal.World.Protected
            { bodies = []
            , constraints = []
            , freeIds = []
            , nextBodyId = 0
            , gravity = { x = 0, y = 0, z = -9.8 }
            , contactGroups = []
            , simulatedBodies = Array.empty
            }
    , previousTick = Nothing
    , nextId = 0
    }


migrate_Geometry_Types_Point2d : (units_old -> units_new) -> (coordinates_old -> coordinates_new) -> Evergreen.V29.Geometry.Types.Point2d units_old coordinates_old -> Evergreen.V31.Geometry.Types.Point2d units_new coordinates_new
migrate_Geometry_Types_Point2d migrate_units migrate_coordinates old =
    case old of
        Evergreen.V29.Geometry.Types.Point2d p0 ->
            Evergreen.V31.Geometry.Types.Point2d p0


migrate_Geometry_Types_Vector2d : (units_old -> units_new) -> (coordinates_old -> coordinates_new) -> Evergreen.V29.Geometry.Types.Vector2d units_old coordinates_old -> Evergreen.V31.Geometry.Types.Vector2d units_new coordinates_new
migrate_Geometry_Types_Vector2d migrate_units migrate_coordinates old =
    case old of
        Evergreen.V29.Geometry.Types.Vector2d p0 ->
            Evergreen.V31.Geometry.Types.Vector2d p0


migrate_Point2d_Point2d : (units_old -> units_new) -> (coordinates_old -> coordinates_new) -> Evergreen.V29.Point2d.Point2d units_old coordinates_old -> Evergreen.V31.Point2d.Point2d units_new coordinates_new
migrate_Point2d_Point2d migrate_units migrate_coordinates old =
    old |> migrate_Geometry_Types_Point2d migrate_units migrate_coordinates


migrate_Scene3d_Material_Texture : (value_old -> value_new) -> Evergreen.V29.Scene3d.Material.Texture value_old -> Evergreen.V31.Scene3d.Material.Texture value_new
migrate_Scene3d_Material_Texture migrate_value old =
    old |> migrate_Scene3d_Types_Texture migrate_value


migrate_Scene3d_Types_Texture : (value_old -> value_new) -> Evergreen.V29.Scene3d.Types.Texture value_old -> Evergreen.V31.Scene3d.Types.Texture value_new
migrate_Scene3d_Types_Texture migrate_value old =
    case old of
        Evergreen.V29.Scene3d.Types.Constant p0 ->
            Evergreen.V31.Scene3d.Types.Constant (p0 |> migrate_value)

        Evergreen.V29.Scene3d.Types.Texture p0 ->
            Evergreen.V31.Scene3d.Types.Texture p0


migrate_Types_ArrowKey : Evergreen.V29.Types.ArrowKey -> Evergreen.V31.Types.ArrowKey
migrate_Types_ArrowKey old =
    case old of
        Evergreen.V29.Types.UpKey ->
            Evergreen.V31.Types.UpKey

        Evergreen.V29.Types.DownKey ->
            Evergreen.V31.Types.DownKey

        Evergreen.V29.Types.LeftKey ->
            Evergreen.V31.Types.LeftKey

        Evergreen.V29.Types.RightKey ->
            Evergreen.V31.Types.RightKey


migrate_Types_BackendMsg : Evergreen.V29.Types.BackendMsg -> Evergreen.V31.Types.BackendMsg
migrate_Types_BackendMsg old =
    case old of
        Evergreen.V29.Types.ClientConnected p0 p1 ->
            Evergreen.V31.Types.ClientConnected p0 p1

        Evergreen.V29.Types.NoOpBackendMsg ->
            Evergreen.V31.Types.NoOpBackendMsg


migrate_Types_ButtonState : Evergreen.V29.Types.ButtonState -> Evergreen.V31.Types.ButtonState
migrate_Types_ButtonState old =
    case old of
        Evergreen.V29.Types.Up ->
            Evergreen.V31.Types.Up

        Evergreen.V29.Types.Down ->
            Evergreen.V31.Types.Down


migrate_Types_FrontendMsg : Evergreen.V29.Types.FrontendMsg -> Evergreen.V31.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V29.Types.WindowResized p0 p1 ->
            Evergreen.V31.Types.WindowResized p0 p1

        Evergreen.V29.Types.Tick p0 ->
            Evergreen.V31.Types.Tick (p0 |> Duration.milliseconds)

        Evergreen.V29.Types.MouseMoved p0 ->
            Evergreen.V31.Types.MouseMoved (p0 |> migrate_Vector2d_Vector2d identity migrate_Types_ScreenCoordinates)

        Evergreen.V29.Types.MouseDown ->
            Evergreen.V31.Types.MouseDown

        Evergreen.V29.Types.MouseUp ->
            Evergreen.V31.Types.MouseUp

        Evergreen.V29.Types.ArrowKeyChanged p0 p1 ->
            Evergreen.V31.Types.ArrowKeyChanged (p0 |> migrate_Types_ArrowKey)
                (p1 |> migrate_Types_ButtonState)

        Evergreen.V29.Types.TouchesChanged p0 ->
            Evergreen.V31.Types.TouchesChanged (p0 |> migrate_Types_TouchContact)

        Evergreen.V29.Types.JoystickTouchChanged p0 ->
            Evergreen.V31.Types.JoystickTouchChanged (p0 |> migrate_Types_TouchContact)

        Evergreen.V29.Types.ShootClicked ->
            Evergreen.V31.Types.ShootClicked

        Evergreen.V29.Types.GotPointerLock ->
            Evergreen.V31.Types.GotPointerLock

        Evergreen.V29.Types.LostPointerLock ->
            Evergreen.V31.Types.LostPointerLock

        Evergreen.V29.Types.GotColorTexture p0 ->
            Evergreen.V31.Types.GotColorTexture (p0 |> Result.map (migrate_Scene3d_Material_Texture identity))

        Evergreen.V29.Types.GotRoughnessTexture p0 ->
            Evergreen.V31.Types.GotRoughnessTexture (p0 |> Result.map (migrate_Scene3d_Material_Texture identity))

        Evergreen.V29.Types.NoOpFrontendMsg ->
            Evergreen.V31.Types.NoOpFrontendMsg


migrate_Types_ScreenCoordinates : Evergreen.V29.Types.ScreenCoordinates -> Evergreen.V31.Types.ScreenCoordinates
migrate_Types_ScreenCoordinates old =
    case old of
        Evergreen.V29.Types.ScreenCoordinates ->
            Evergreen.V31.Types.ScreenCoordinates


migrate_Types_ToBackend : Evergreen.V29.Types.ToBackend -> Evergreen.V31.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V29.Types.FromFrontendTick p0 ->
            Evergreen.V31.Types.NoOpToBackend

        Evergreen.V29.Types.NoOpToBackend ->
            Evergreen.V31.Types.NoOpToBackend


migrate_Types_ToFrontend : Evergreen.V29.Types.ToFrontend -> Evergreen.V31.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V29.Types.FromBackendTick p0 ->
            Evergreen.V31.Types.NoOpToFrontend

        Evergreen.V29.Types.NoOpToFrontend ->
            Evergreen.V31.Types.NoOpToFrontend


migrate_Types_TouchContact : Evergreen.V29.Types.TouchContact -> Evergreen.V31.Types.TouchContact
migrate_Types_TouchContact old =
    case old of
        Evergreen.V29.Types.OneFinger p0 ->
            Evergreen.V31.Types.OneFinger
                { identifier = p0.identifier
                , screenPos = p0.screenPos |> migrate_Point2d_Point2d identity migrate_Types_ScreenCoordinates
                }

        Evergreen.V29.Types.NotOneFinger ->
            Evergreen.V31.Types.NotOneFinger


migrate_Vector2d_Vector2d : (units_old -> units_new) -> (coordinates_old -> coordinates_new) -> Evergreen.V29.Vector2d.Vector2d units_old coordinates_old -> Evergreen.V31.Vector2d.Vector2d units_new coordinates_new
migrate_Vector2d_Vector2d migrate_units migrate_coordinates old =
    old |> migrate_Geometry_Types_Vector2d migrate_units migrate_coordinates
